/***
 *			Horizon generator for Nuclear Rush
 *				Copyright 1993, Futurescape Productions
 *				All Rights Reserved
 ***/

#include <stdio.h>
#include <stdlib.h>
#include "game.h"

extern PLAYER		Player;

#define	DEBUG		FALSE
#define	MOVECPIT	TRUE
#define	TILT_FIX	FALSE

extern void	Bomb(char *fmt, ...);
extern void	Debug(char *fmt, ...);

extern WORD	SYS_SCROLLX;
extern WORD	SYS_NEWXA;
extern WORD	SYS_NEWXB;

WORD	*SYS_HAPTR;			/* Pointer to elements in SYS_HARRAY */
WORD	SYS_HATOGGLE;		/* Which Horizontal Int. to use? */
extern WORD	SYS_HARRAY1[128];	/* Horizontal Interrupt Vertical Scroll Array */
extern WORD	SYS_HARRAY2[128];	/* Horizontal Interrupt Vertical Scroll Array */

#define	TEST		0

extern WORD		Ship_Rotation;
int				PX,PY;
extern BYTE		SYS_FLICKER;
extern WORD		Headset_Rotation;		/* Direction headset is looking */

/***
 *		Set up the Horizontal scroll array
 ***/ 

const static WORD	Cvt360To512[512] = {
	  0,  1,  3,  4,  6,  7,  9, 10,
	 11, 13, 14, 16, 17, 18, 20, 21,
	 23, 24, 26, 27, 28, 30, 31, 33,
	 34, 36, 37, 38, 40, 41, 43, 44,
	 46, 47, 48, 50, 51, 53, 54, 55,
	 57, 58, 60, 61, 63, 64, 65, 67,
	 68, 70, 71, 73, 74, 75, 77, 78,
	 80, 81, 82, 84, 85, 87, 88, 90,
	 91, 92, 94, 95, 97, 98,100,101,
	102,104,105,107,108,110,111,112,
	114,115,117,118,119,121,122,124,
	125,127,128,129,131,132,134,135,
	137,138,139,141,142,144,145,146,
	148,149,151,152,154,155,156,158,
	159,161,162,164,165,166,168,169,
	171,172,174,175,176,178,179,181,
	182,183,185,186,188,189,191,192,
	193,195,196,198,199,201,202,203,
	205,206,208,209,210,212,213,215,
	216,218,219,220,222,223,225,226,
	228,229,230,232,233,235,236,238,
	239,240,242,243,245,246,247,249,
	250,252,253,255,256,257,259,260,
	262,263,265,266,267,269,270,272,
	273,274,276,277,279,280,282,283,
	284,286,287,289,290,292,293,294,
	296,297,299,300,302,303,304,306,
	307,309,310,311,313,314,316,317,
	319,320,321,323,324,326,327,329,
	330,331,333,334,336,337,338,340,
	341,343,344,346,347,348,350,351,
	353,354,356,357,358,360,361,363,
	364,366,367,368,370,371,373,374,
	375,377,378,380,381,383,384,385,
	387,388,390,391,393,394,395,397,
	398,400,401,402,404,405,407,408,
	410,411,412,414,415,417,418,420,
	421,422,424,425,427,428,430,431,
	432,434,435,437,438,439,441,442,
	444,445,447,448,449,451,452,454,
	455,457,458,459,461,462,464,465,
	466,468,469,471,472,474,475,476,
	478,479,481,482,484,485,486,488,
	489,491,492,494,495,496,498,499,
	501,502,503,505,506,508,509,511
};

/***
 *		Table used to generate the bitmapped horizon
 ***/

const static BYTE	hoffsets[224][16] = {
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,
	  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  2,  2,
	  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  3,
	  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  2,  2,  3,  3,  4,
	  0,  0,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  3,  3,  4,  5,
	  0,  0,  0,  0,  1,  1,  1,  1,  1,  2,  2,  2,  3,  4,  4,  5,
	  0,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  3,  3,  4,  5,  6,
	  0,  0,  0,  1,  1,  1,  1,  1,  2,  2,  2,  3,  4,  5,  6,  7,
	  0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  3,  3,  4,  5,  6,  8,
	  0,  0,  1,  1,  1,  1,  1,  2,  2,  3,  3,  4,  5,  6,  7,  9,
	  0,  0,  0,  1,  1,  1,  1,  2,  2,  3,  3,  4,  5,  6,  8, 10,
	  0,  0,  1,  1,  1,  1,  2,  2,  2,  3,  4,  5,  6,  7,  8, 10,
	  0,  0,  1,  1,  1,  1,  1,  2,  2,  3,  4,  5,  6,  7,  9, 11,
	  0,  1,  1,  1,  1,  1,  2,  2,  3,  4,  4,  5,  6,  8, 10, 12,
	  0,  0,  1,  1,  1,  1,  2,  2,  3,  4,  4,  6,  7,  8, 10, 13,
	  0,  1,  1,  1,  1,  2,  2,  3,  3,  4,  5,  6,  7,  9, 11, 14,
	  0,  0,  1,  1,  1,  2,  2,  3,  3,  4,  5,  6,  8, 10, 12, 15,
	  0,  0,  1,  1,  1,  1,  2,  3,  3,  4,  5,  7,  8, 10, 12, 15,
	  0,  1,  1,  1,  1,  2,  2,  3,  4,  5,  5,  7,  8, 11, 13, 16,
	  0,  0,  1,  1,  1,  2,  2,  3,  4,  5,  6,  7,  9, 11, 14, 17,
	  0,  1,  1,  1,  1,  2,  2,  3,  4,  5,  6,  8,  9, 12, 14, 18,
	  0,  0,  1,  1,  1,  2,  2,  3,  4,  5,  6,  8, 10, 12, 15, 19,
	  0,  1,  1,  1,  2,  2,  3,  3,  4,  6,  7,  8, 10, 13, 16, 20,
	  0,  1,  1,  1,  1,  2,  3,  3,  4,  6,  7,  9, 11, 13, 16, 20,
	  0,  0,  1,  1,  1,  2,  3,  3,  4,  6,  7,  9, 11, 14, 17, 21,
	  0,  1,  1,  1,  2,  2,  3,  4,  5,  6,  7,  9, 11, 14, 18, 22,
	  0,  0,  1,  1,  2,  2,  3,  4,  5,  6,  8, 10, 12, 15, 18, 23,
	  0,  1,  1,  1,  2,  2,  3,  4,  5,  7,  8, 10, 12, 16, 19, 24,
	  0,  1,  1,  1,  2,  2,  3,  4,  5,  7,  8, 10, 13, 16, 19, 25,
	  0,  1,  1,  2,  2,  3,  3,  4,  5,  7,  9, 11, 13, 17, 20, 25,
	  0,  1,  1,  1,  2,  3,  3,  4,  5,  7,  9, 11, 14, 17, 21, 26,
	  0,  0,  1,  1,  2,  2,  3,  4,  6,  7,  9, 11, 14, 18, 21, 27,
	  0,  1,  1,  2,  2,  3,  3,  5,  6,  8,  9, 12, 14, 18, 22, 28,
	  0,  1,  1,  1,  2,  3,  3,  5,  6,  8,  9, 12, 15, 19, 23, 29,
	  0,  1,  1,  2,  2,  3,  4,  5,  6,  8, 10, 13, 15, 19, 23, 30,
	  0,  1,  1,  2,  2,  3,  4,  5,  6,  8, 10, 13, 16, 20, 24, 30,
	  0,  0,  1,  1,  2,  3,  4,  5,  6,  8, 10, 13, 16, 20, 25, 31,
	  0,  1,  1,  2,  2,  3,  4,  5,  7,  9, 11, 14, 17, 21, 25, 32,
	  0,  1,  1,  2,  2,  3,  4,  5,  7,  9, 11, 14, 17, 21, 26, 33,
	  0,  1,  1,  2,  2,  3,  4,  6,  7,  9, 11, 14, 17, 22, 27, 34,
	  0,  1,  1,  2,  2,  3,  4,  6,  7,  9, 11, 15, 18, 23, 27, 35,
	  0,  1,  1,  2,  2,  3,  4,  6,  7,  9, 11, 15, 18, 23, 28, 35,
	  0,  1,  1,  2,  2,  3,  4,  6,  7, 10, 12, 15, 19, 24, 29, 36,
	  0,  1,  1,  2,  2,  3,  4,  6,  8, 10, 12, 16, 19, 24, 29, 37,
	  0,  1,  1,  2,  3,  4,  5,  6,  8, 10, 13, 16, 20, 25, 30, 38,
	  0,  1,  1,  2,  3,  4,  5,  6,  8, 10, 13, 16, 20, 25, 31, 39,
	  0,  1,  1,  2,  2,  4,  5,  6,  8, 11, 13, 17, 20, 26, 31, 39,
	  0,  1,  1,  2,  3,  4,  5,  7,  8, 11, 13, 17, 21, 26, 32, 40,
	  0,  1,  1,  2,  3,  4,  5,  7,  8, 11, 13, 17, 21, 27, 33, 41,
	  0,  1,  2,  2,  3,  4,  5,  7,  9, 11, 14, 18, 22, 28, 33, 42,
	  0,  1,  1,  2,  3,  4,  5,  7,  9, 12, 14, 18, 22, 28, 34, 43,
	  0,  1,  1,  2,  3,  4,  5,  7,  9, 12, 14, 18, 22, 28, 35, 44,
	  0,  1,  2,  2,  3,  4,  5,  7,  9, 12, 15, 19, 23, 29, 35, 44,
	  0,  1,  2,  2,  3,  4,  5,  7,  9, 12, 15, 19, 23, 30, 36, 45,
	  0,  1,  1,  2,  3,  4,  5,  7,  9, 12, 15, 19, 24, 30, 36, 46,
	  0,  1,  2,  2,  3,  4,  6,  8, 10, 13, 15, 20, 24, 31, 37, 47,
	  0,  1,  2,  2,  3,  4,  6,  8, 10, 13, 16, 20, 25, 31, 38, 48,
	  0,  1,  1,  2,  3,  4,  6,  8, 10, 13, 16, 20, 25, 32, 38, 49,
	  0,  1,  2,  3,  3,  5,  6,  8, 10, 13, 16, 21, 25, 32, 39, 49,
	  0,  1,  2,  2,  3,  5,  6,  8, 10, 13, 16, 21, 26, 33, 40, 50,
	  0,  1,  2,  2,  3,  5,  6,  8, 10, 14, 17, 22, 26, 33, 40, 51,
	  0,  1,  2,  3,  3,  5,  6,  8, 11, 14, 17, 22, 27, 34, 41, 52,
	  0,  1,  2,  3,  3,  5,  6,  8, 11, 14, 17, 22, 27, 34, 42, 53,
	  0,  1,  2,  2,  3,  5,  6,  8, 11, 14, 17, 23, 27, 35, 42, 54,
	  0,  1,  2,  3,  4,  5,  6,  9, 11, 15, 18, 23, 28, 36, 43, 54,
	  0,  1,  2,  3,  4,  5,  6,  9, 11, 15, 18, 23, 28, 36, 44, 55,
	  0,  1,  2,  3,  3,  5,  6,  9, 11, 15, 18, 24, 29, 37, 44, 56,
	  0,  1,  2,  3,  4,  5,  7,  9, 12, 15, 19, 24, 29, 37, 45, 57,
	  0,  1,  2,  3,  4,  5,  7,  9, 12, 15, 19, 24, 30, 38, 46, 58,
	  0,  1,  2,  3,  4,  5,  7,  9, 12, 16, 19, 25, 30, 38, 46, 59,
	  0,  1,  2,  3,  4,  5,  7, 10, 12, 16, 19, 25, 31, 39, 47, 59,
	  0,  1,  2,  3,  4,  5,  7, 10, 12, 16, 20, 25, 31, 39, 48, 60,
	  0,  1,  2,  3,  4,  5,  7, 10, 12, 16, 20, 26, 31, 40, 48, 61,
	  0,  1,  2,  3,  4,  6,  7, 10, 13, 17, 20, 26, 32, 40, 49, 62,
	  0,  1,  2,  3,  4,  6,  7, 10, 13, 17, 20, 27, 32, 41, 50, 63,
	  0,  1,  2,  3,  4,  6,  7, 10, 13, 17, 21, 27, 33, 41, 50, 64,
	  0,  1,  2,  3,  4,  6,  7, 10, 13, 17, 21, 27, 33, 42, 51, 64,
	  0,  1,  2,  3,  4,  6,  8, 11, 13, 17, 21, 28, 34, 43, 52, 65,
	  0,  1,  2,  3,  4,  6,  8, 11, 13, 18, 22, 28, 34, 43, 52, 66,
	  0,  1,  2,  3,  4,  6,  8, 11, 13, 18, 22, 28, 34, 44, 53, 67,
	  0,  1,  2,  3,  4,  6,  8, 11, 14, 18, 22, 29, 35, 44, 54, 68,
	  0,  1,  2,  3,  4,  6,  8, 11, 14, 18, 22, 29, 35, 45, 54, 69,
	  0,  1,  2,  3,  4,  6,  8, 11, 14, 19, 23, 29, 36, 45, 55, 69,
	  0,  1,  2,  3,  4,  6,  8, 11, 14, 19, 23, 30, 36, 46, 56, 70,
	  0,  1,  2,  3,  4,  6,  8, 11, 14, 19, 23, 30, 36, 46, 56, 71,
	  0,  1,  2,  3,  5,  7,  8, 12, 15, 19, 23, 30, 37, 47, 57, 72,
	  0,  1,  2,  3,  5,  7,  9, 12, 15, 19, 24, 31, 37, 47, 58, 73,
	  0,  1,  2,  3,  5,  7,  9, 12, 15, 20, 24, 31, 38, 48, 58, 74,
	  0,  1,  2,  3,  5,  7,  9, 12, 15, 20, 24, 31, 38, 48, 59, 74,
	  0,  1,  2,  4,  5,  7,  9, 12, 15, 20, 25, 32, 39, 49, 60, 75,
	  0,  1,  2,  4,  5,  7,  9, 12, 15, 20, 25, 32, 39, 50, 60, 76,
	  0,  1,  2,  4,  5,  7,  9, 12, 16, 20, 25, 32, 39, 50, 61, 77,
	  0,  1,  2,  4,  5,  7,  9, 12, 16, 21, 25, 33, 40, 51, 61, 78,
	  0,  1,  2,  4,  5,  7,  9, 12, 16, 21, 25, 33, 40, 51, 62, 79,
	  0,  1,  3,  4,  5,  7,  9, 13, 16, 21, 26, 34, 41, 52, 63, 79,
	  0,  1,  3,  4,  5,  7,  9, 13, 16, 21, 26, 34, 41, 52, 63, 80,
	  0,  1,  3,  4,  5,  7,  9, 13, 16, 22, 26, 34, 42, 53, 64, 81,
	  0,  1,  2,  4,  5,  7, 10, 13, 17, 22, 27, 34, 42, 53, 65, 82,
	  0,  1,  2,  4,  5,  7, 10, 13, 17, 22, 27, 35, 42, 54, 65, 83,
	  0,  1,  2,  4,  5,  7, 10, 13, 17, 22, 27, 35, 43, 54, 66, 83,
	  0,  1,  2,  4,  5,  7, 10, 13, 17, 22, 27, 35, 43, 55, 67, 84,
	  0,  1,  3,  4,  5,  8, 10, 14, 17, 23, 28, 36, 44, 56, 67, 85,
	  0,  1,  3,  4,  5,  8, 10, 14, 17, 23, 28, 36, 44, 56, 68, 86,
	  0,  1,  3,  4,  5,  8, 10, 14, 18, 23, 28, 37, 45, 57, 69, 87,
	  0,  1,  3,  4,  6,  8, 10, 14, 18, 23, 29, 37, 45, 57, 69, 88,
	  0,  1,  3,  4,  6,  8, 10, 14, 18, 24, 29, 37, 45, 58, 70, 88,
	  0,  1,  3,  4,  6,  8, 10, 14, 18, 24, 29, 38, 46, 58, 71, 89,
	  0,  1,  3,  4,  6,  8, 10, 14, 18, 24, 29, 38, 46, 59, 71, 90,
	  0,  1,  3,  4,  6,  8, 10, 14, 18, 24, 29, 38, 47, 59, 72, 91,
	  0,  1,  3,  4,  6,  8, 11, 14, 18, 24, 30, 39, 47, 60, 73, 92,
	  0,  1,  3,  4,  6,  8, 11, 15, 19, 25, 30, 39, 47, 60, 73, 93,
	  0,  1,  3,  4,  6,  8, 11, 15, 19, 25, 30, 39, 48, 61, 74, 93,
	  0,  1,  3,  5,  6,  9, 11, 15, 19, 25, 31, 40, 48, 62, 75, 94,
	  0,  1,  3,  5,  6,  9, 11, 15, 19, 25, 31, 40, 49, 62, 75, 95,
	  0,  1,  3,  5,  6,  9, 11, 15, 19, 26, 31, 41, 49, 63, 76, 96,
	  0,  1,  3,  5,  6,  9, 11, 15, 20, 26, 32, 41, 50, 63, 77, 97,
	  0,  2,  3,  5,  6,  9, 11, 16, 20, 26, 32, 41, 50, 64, 77, 98,
	  0,  2,  3,  5,  6,  9, 12, 16, 20, 26, 32, 42, 51, 64, 78, 98,
	  0,  2,  3,  5,  6,  9, 12, 16, 20, 27, 32, 42, 51, 65, 79, 99,
	  0,  2,  3,  5,  6,  9, 12, 16, 20, 27, 33, 42, 51, 65, 79,100,
	  0,  2,  3,  5,  6,  9, 12, 16, 20, 27, 33, 43, 52, 66, 80,101,
	  0,  2,  3,  5,  6,  9, 12, 16, 21, 27, 33, 43, 52, 66, 81,102,
	  0,  1,  3,  5,  6,  9, 12, 16, 21, 27, 33, 43, 52, 67, 81,103,
	  0,  1,  3,  5,  6,  9, 12, 16, 21, 27, 34, 43, 53, 67, 82,103,
	  0,  1,  3,  5,  6,  9, 12, 16, 21, 28, 34, 44, 53, 68, 82,104,
	  0,  1,  3,  5,  6,  9, 12, 17, 21, 28, 34, 44, 54, 68, 83,105,
	  0,  1,  3,  5,  7,  9, 12, 17, 21, 28, 34, 45, 54, 69, 84,106,
	  0,  1,  3,  5,  7,  9, 12, 17, 22, 28, 35, 45, 55, 70, 84,107,
	  0,  2,  3,  5,  7, 10, 12, 17, 22, 29, 35, 45, 55, 70, 85,108,
	  0,  2,  3,  5,  7, 10, 13, 17, 22, 29, 35, 46, 56, 71, 86,108,
	  0,  2,  3,  5,  7, 10, 13, 17, 22, 29, 36, 46, 56, 71, 86,109,
	  0,  1,  3,  5,  7, 10, 13, 17, 22, 29, 36, 46, 56, 72, 87,110,
	  0,  1,  3,  5,  7, 10, 13, 18, 22, 29, 36, 47, 57, 72, 88,111,
	  0,  2,  3,  5,  7, 10, 13, 18, 22, 30, 36, 47, 57, 73, 88,112,
	  0,  2,  3,  5,  7, 10, 13, 18, 23, 30, 37, 47, 58, 73, 89,113,
	  0,  2,  3,  5,  7, 10, 13, 18, 23, 30, 37, 48, 58, 74, 90,113,
	  0,  1,  3,  5,  7, 10, 13, 18, 23, 30, 37, 48, 58, 74, 90,114,
	  0,  2,  3,  5,  7, 10, 13, 18, 23, 31, 37, 48, 59, 75, 91,115,
	  0,  2,  3,  5,  7, 10, 13, 18, 23, 31, 38, 49, 59, 76, 92,116,
	  0,  2,  4,  5,  7, 10, 14, 19, 24, 31, 38, 49, 60, 76, 92,117,
	  0,  1,  3,  5,  7, 10, 13, 19, 24, 31, 38, 49, 60, 77, 93,118,
	  0,  2,  3,  5,  7, 10, 14, 19, 24, 31, 38, 50, 61, 77, 94,118,
	  0,  2,  4,  6,  7, 11, 14, 19, 24, 32, 39, 50, 61, 78, 94,119,
	  0,  2,  3,  5,  7, 11, 14, 19, 24, 32, 39, 50, 61, 78, 95,120,
	  0,  2,  4,  6,  7, 11, 14, 19, 24, 32, 39, 51, 62, 79, 96,121,
	  0,  2,  4,  6,  8, 11, 14, 19, 25, 32, 40, 51, 62, 79, 96,122,
	  0,  2,  4,  6,  7, 11, 14, 19, 25, 32, 40, 52, 63, 80, 97,123,
	  0,  2,  4,  6,  8, 11, 14, 20, 25, 33, 40, 52, 63, 80, 98,123,
	  0,  2,  4,  6,  8, 11, 14, 20, 25, 33, 40, 52, 64, 81, 98,124,
	  0,  2,  4,  6,  8, 11, 14, 20, 25, 33, 41, 53, 64, 81, 99,125,
	  0,  2,  4,  6,  8, 11, 15, 20, 25, 33, 41, 53, 65, 82,100,126,
	  0,  2,  4,  6,  8, 11, 15, 20, 25, 34, 41, 53, 65, 83,100,127,
	  0,  2,  4,  6,  8, 11, 15, 20, 26, 34, 41, 54, 65, 83,101,128,
	  0,  2,  4,  6,  8, 11, 15, 20, 26, 34, 42, 54, 66, 84,101,128,
	  0,  2,  4,  6,  8, 12, 15, 21, 26, 34, 42, 54, 66, 84,102,129,
	  0,  2,  4,  6,  8, 11, 15, 21, 26, 34, 42, 55, 67, 85,103,130,
	  0,  2,  4,  6,  8, 12, 15, 21, 26, 35, 43, 55, 67, 85,104,131,
	  0,  2,  4,  6,  8, 12, 15, 21, 27, 35, 43, 55, 67, 86,104,132,
	  0,  2,  4,  6,  8, 12, 15, 21, 27, 35, 43, 56, 68, 86,105,132,
	  0,  2,  4,  6,  8, 12, 15, 21, 27, 35, 43, 56, 68, 87,105,133,
	  0,  2,  4,  6,  8, 12, 15, 21, 27, 36, 44, 56, 69, 87,106,134,
	  0,  2,  4,  6,  8, 12, 15, 21, 27, 36, 44, 57, 69, 88,107,135,
	  0,  2,  4,  6,  8, 12, 16, 22, 27, 36, 44, 57, 70, 89,107,136,
	  0,  2,  4,  6,  8, 12, 16, 22, 28, 36, 44, 58, 70, 89,108,137,
	  0,  2,  4,  6,  8, 12, 16, 22, 28, 36, 45, 58, 70, 90,109,137,
	  0,  2,  4,  6,  8, 12, 16, 22, 28, 37, 45, 58, 71, 90,109,138,
	  0,  2,  4,  6,  8, 12, 16, 22, 28, 37, 45, 58, 71, 91,110,139,
	  0,  2,  4,  6,  9, 12, 16, 22, 28, 37, 45, 59, 72, 91,111,140,
	  0,  2,  4,  6,  9, 13, 16, 22, 28, 37, 46, 59, 72, 92,111,141,
	  0,  2,  4,  6,  9, 13, 16, 22, 29, 38, 46, 60, 73, 92,112,142,
	  0,  2,  4,  7,  9, 13, 16, 23, 29, 38, 46, 60, 73, 93,113,142,
	  0,  2,  4,  7,  9, 13, 17, 23, 29, 38, 47, 60, 73, 93,113,143,
	  0,  2,  4,  7,  9, 13, 17, 23, 29, 38, 47, 61, 74, 94,114,144,
	  0,  2,  4,  7,  9, 13, 17, 23, 29, 38, 47, 61, 74, 94,115,145,
	  0,  2,  4,  7,  9, 13, 17, 23, 29, 39, 47, 61, 75, 95,115,146,
	  0,  2,  4,  7,  9, 13, 17, 23, 30, 39, 48, 62, 75, 96,116,147,
	  0,  2,  4,  7,  9, 13, 17, 23, 30, 39, 48, 62, 75, 96,117,147,
	  0,  2,  4,  7,  9, 13, 17, 23, 30, 39, 48, 62, 76, 97,117,148,
	  0,  2,  4,  7,  9, 13, 17, 24, 30, 40, 48, 63, 76, 97,118,149,
	  0,  2,  4,  7,  9, 13, 17, 24, 30, 40, 49, 63, 77, 98,119,150,
	  0,  2,  4,  7,  9, 13, 17, 24, 30, 40, 49, 63, 77, 98,119,151,
	  0,  2,  4,  7,  9, 13, 17, 24, 30, 40, 49, 64, 78, 99,120,152,
	  0,  2,  5,  7,  9, 14, 18, 24, 31, 40, 49, 64, 78, 99,121,152,
	  0,  2,  4,  7,  9, 13, 18, 24, 31, 41, 50, 64, 78,100,121,153,
	  0,  2,  5,  7, 10, 14, 18, 24, 31, 41, 50, 65, 79,100,122,154,
	  0,  2,  5,  7, 10, 14, 18, 24, 31, 41, 50, 65, 79,101,123,155,
	  0,  2,  5,  7, 10, 14, 18, 25, 31, 41, 51, 66, 80,102,123,156,
	  0,  2,  5,  7, 10, 14, 18, 25, 31, 42, 51, 66, 80,102,124,157,
	  0,  2,  5,  7, 10, 14, 18, 25, 32, 42, 51, 66, 81,103,124,157,
	  0,  2,  5,  7, 10, 14, 18, 25, 32, 42, 51, 67, 81,103,125,158,
	  0,  2,  5,  7, 10, 14, 18, 25, 32, 42, 52, 67, 81,104,126,159,
	  0,  2,  5,  7, 10, 14, 18, 25, 32, 42, 52, 67, 82,104,126,160,
	  0,  2,  5,  7, 10, 14, 19, 25, 32, 43, 52, 68, 82,105,127,161,
	  0,  2,  5,  7, 10, 14, 19, 25, 32, 43, 52, 68, 83,105,128,162,
	  0,  2,  5,  7, 10, 14, 19, 26, 33, 43, 53, 68, 83,106,128,162,
	  0,  2,  5,  7, 10, 14, 19, 26, 33, 43, 53, 69, 84,106,129,163,
	  0,  2,  5,  7, 10, 15, 19, 26, 33, 44, 53, 69, 84,107,130,164,
	  0,  2,  5,  7, 10, 15, 19, 26, 33, 44, 53, 69, 84,107,130,165,
	  0,  2,  5,  8, 10, 15, 19, 26, 33, 44, 54, 70, 85,108,131,166,
	  0,  2,  5,  8, 10, 15, 19, 26, 33, 44, 54, 70, 85,108,132,167,
	  0,  2,  5,  8, 10, 15, 19, 26, 34, 44, 54, 70, 86,109,132,167,
	  0,  2,  5,  8, 10, 15, 19, 27, 34, 45, 55, 71, 86,110,133,168,
	  0,  2,  5,  8, 10, 15, 20, 27, 34, 45, 55, 71, 87,110,134,169,
	  0,  2,  5,  8, 10, 15, 19, 27, 34, 45, 55, 71, 87,111,134,170,
	  0,  2,  5,  8, 10, 15, 20, 27, 34, 45, 55, 72, 87,111,135,171,
	  0,  2,  5,  8, 11, 15, 20, 27, 34, 46, 56, 72, 88,112,136,172,
	  0,  2,  5,  8, 11, 15, 20, 27, 35, 46, 56, 73, 88,112,136,172,
	  0,  2,  5,  8, 11, 15, 20, 27, 35, 46, 56, 73, 89,113,137,173,
	  0,  2,  5,  8, 11, 15, 20, 27, 35, 46, 56, 73, 89,113,138,174,
	  0,  2,  5,  8, 11, 15, 20, 28, 35, 46, 57, 74, 90,114,138,175,
	  0,  2,  5,  8, 11, 16, 20, 28, 35, 47, 57, 74, 90,114,139,176,
	  0,  2,  5,  8, 11, 16, 20, 28, 35, 47, 57, 74, 90,115,140,177,
	  0,  2,  5,  8, 11, 16, 20, 28, 36, 47, 58, 75, 91,116,140,177,
	  0,  2,  5,  8, 11, 16, 20, 28, 36, 47, 58, 75, 91,116,141,178,
	  0,  2,  5,  8, 11, 16, 21, 28, 36, 47, 58, 75, 92,117,142,179,
	  0,  2,  5,  8, 11, 16, 21, 28, 36, 48, 58, 76, 92,117,142,180,
	  0,  2,  5,  8, 11, 16, 21, 29, 36, 48, 59, 76, 92,118,143,181,
	  0,  2,  5,  8, 11, 16, 21, 29, 36, 48, 59, 76, 93,118,144,182,
	  0,  2,  5,  8, 11, 16, 21, 29, 37, 48, 59, 77, 93,119,144,182,
	  0,  2,  5,  8, 11, 16, 21, 29, 37, 49, 59, 77, 94,119,145,183,
	  0,  2,  5,  8, 11, 16, 21, 29, 37, 49, 60, 77, 94,120,146,184,
	  0,  2,  5,  8, 11, 16, 21, 29, 37, 49, 60, 78, 95,120,146,185,
	  0,  2,  5,  8, 11, 16, 21, 29, 37, 49, 60, 78, 95,121,147,186
};

#if 0
const static ULONG	hcolors[32] = {
	0x66666666,
	0x66666666,
	0x56565656,
	0x65666566,
	0x56565656,
	0x65656565,
	0x55565556,
	0x65656565,

	0x55555555,
	0x55555555,
	0x45454545,
	0x54555455,
	0x45454545,
	0x54545454,
	0x44454445,
	0x54545454,

	0x44444444,
	0x44444444,
	0x34343434,
	0x43444344,
	0x34343434,
	0x43434343,
	0x33343334,
	0x43434343,

	0x33333333,
	0x33333333,
	0x23232323,
	0x32333233,
	0x23232323,
	0x32323232,
	0x22232223,
	0x32323232
};
#else
const static ULONG	hcolors[32] = {
	0x66666666,
	0x66666666,
	0x56565656,
	0x66666666,
	0x56565656,
	0x65656565,
	0x55555555,
	0x65656565,

	0x55555555,
	0x55555555,
	0x45454545,
	0x55555555,
	0x45454545,
	0x54545454,
	0x44444444,
	0x54545454,

	0x44444444,
	0x44444444,
	0x34343434,
	0x44444444,
	0x34343434,
	0x43434343,
	0x33333333,
	0x43434343,

	0x33333333,
	0x33333333,
	0x23232323,
	0x33333333,
	0x23232323,
	0x32323232,
	0x22222222,
	0x32323232
};
#endif

const static WORD horz_adj[16][17] = {
/*   0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F   X */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,	/* 0 */
	 -1, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1, -1,	/* 1 */
	 -2, -2, -1, -1, -1,  0,  0,  0,  0,  0,  1,  1,  1,  2,  2,  2, -2,	/* 2 */
	 -3, -2, -2, -1, -1, -1,  0,  0,  0,  1,  1,  1,  2,  2,  3,  3, -3,	/* 3 */
	 -4, -3, -3, -2, -1, -1,  0,  0,  0,  1,  1,  2,  3,  3,  4,  4, -4,	/* 4 */
	 -5, -4, -3, -3, -2, -1, -1,  0,  1,  1,  2,  3,  3,  4,  5,  5, -5,	/* 5 */
	 -6, -5, -4, -3, -2, -2, -1,  0,  1,  2,  2,  3,  4,  5,  6,  6, -6,	/* 6 */
	 -7, -6, -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5,  6,  7,  8, -8,	/* 7 */
	 -7, -6, -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5,  6,  7,  8, -8,	/* 8 */
	 -8, -7, -6, -5, -4, -2, -1,  0,  1,  2,  4,  5,  6,  7,  8,  9, -9,	/* 9 */
	 -9, -8, -7, -5, -4, -3, -1,  0,  1,  3,  4,  5,  7,  8,  9, 10,-10,	/* A */
	-10, -9, -7, -6, -4, -3, -2,  0,  2,  3,  4,  6,  7,  9, 10, 11,-11,	/* B */
	-11,-10, -8, -6, -5, -3, -2,  0,  2,  3,  5,  6,  8, 10, 11, 12,-12,	/* C */
	-12,-10, -9, -7, -5, -4, -2,  0,  2,  4,  5,  7,  9, 10, 12, 14,-14,	/* D */
	-13,-11, -9, -8, -6, -4, -2,  0,  2,  4,  6,  8,  9, 11, 13, 15,-15,	/* E */
	-14,-12,-10, -8, -6, -4, -2,  0,  2,  4,  6,  8, 10, 12, 14, 16,-16,	/* F */
};

UWORD		SYS_HORZCHRS;			/* Where the Horizon characters are in VRAM */
extern ULONG		SYS_HORIZON[28*8];	/* The Horizon Bitmap */
UWORD		SYS_HORZLEN;			/* Flag to send the horizon */
WORD		SYS_VTILT;				/* From -15 to 15, horizon tilt factor */
WORD		SYS_VSCROLL[20];		/* Vertical scroll array updated in VBlank */
WORD		SYS_VADJ[20];			/* Vertical adjustment for 3D code */

extern UWORD		NEW_HORZLEN;

static short	old_yp;			/* Don't do horizon again if same as current */

void
Set_HScroll()
{
	register short			y;
	register short			nexty;
	register short			color;
	register short			scrolly;
	register ULONG			fill1;
	register ULONG			fill2;
	register FRAC			xf,yf;
	register ULONG			*lptr;
	register const BYTE	*bptr;
	WORD						xp,yp;

	extern FRAC				SinA;				/* Used to compute ground plane Y */
	extern FRAC				CosA;				/* Used to compute ground plane Y */
	extern WORD				SYS_SCRLXB;
	extern WORD ScreenCol;
	extern WORD ScreenRow;
	extern WORD				SYS_HARDWARE;

	/* Set X scroll value */
	y = Player.Rotation;
	SYS_NEWXA = -(Cvt360To512[y] * 3);

#if MOVECPIT
	/* Update B Map scroll X value */
	SYS_NEWXB = -Cvt360To512[Headset_Rotation];
	ScreenRow = 2;
	ScreenCol = 1;
#if DEBUG
	Debug("%5d        %3d           %5d",SYS_SCRLXB,Player.Rotation,SYS_SCRLXB);
#endif
#endif
	/****
	 *			Note:  The Genesis has a hardware glitch that causes problems
	 *			to happen when using column vertical scroll and horizontal scroll
	 *			at the same time.  The problem is different on at least two
	 *			different versions of the machine.  On machine type 0, scroll
	 *			plane A has it's leftmost 16 pixels blanked...
	 ***/
	if ((SYS_HARDWARE & 0x0F) == 0) {
		SYS_NEWXA &= 0xFFF0;
	} else
		SYS_NEWXB &= 0xFFF0;
	/* Calculate one point at the start of the horizon for a reference */
	xf = Player.X + fmul(INT2FRAC(400),SinA);	/* 400 is the max distance */
	yf = Player.Y + fmul(INT2FRAC(400),CosA);
	xp = FRAC2INT(xf);
	yp = FRAC2INT(yf);
	Transform3D(xf,yf,INT2FRAC(0),&xp,&yp);
	/* 256 is the bottom of the horizon in the map */
	if (yp < 0)
		yp = 0;
	if (yp >= 224)
		yp = 223;
	scrolly = 256-yp;

	/* Recompute the VScroll array */
	if (SYS_VTILT < -15)
		SYS_VTILT = -15;
	if (SYS_VTILT > 15)
		SYS_VTILT = 15;
	for (y=0; y < 17; y++) {
		if (SYS_VTILT < 0)
			SYS_VADJ[y] = -horz_adj[-SYS_VTILT][y];
		else
			SYS_VADJ[y] = horz_adj[SYS_VTILT][y];
		SYS_VSCROLL[y] = scrolly + SYS_VADJ[y];
	}
	for (y=17; y < 20; y++) {
		SYS_VADJ[y] = SYS_VADJ[16];
		SYS_VSCROLL[y] = SYS_VSCROLL[16];
	}

	/* Don't build a horizon every time */
	if (yp == old_yp)
		return;
	old_yp = yp;
	/* Build Horizon Bitmap */
	lptr = &SYS_HORIZON[0];
	fill1 = hcolors[0];
	fill2 = hcolors[1];
	color = 1;
	bptr = &hoffsets[223-yp][1];
	nexty = *bptr++;
	for (y=0; y < 224; y++) {
		if (y & 1)
			*lptr++ = fill1;
		else
			*lptr++ = fill2;
		if (y >= nexty && color < 15) {
			/* Bump to next horizon color */
			color++;
			fill1 = hcolors[color << 1];
			fill2 = hcolors[(color << 1)+1];
			nexty = *bptr++;
		}
	}
	NEW_HORZLEN = 28*32;
}

void
Init_Horizon()
{
	old_yp = -1;
	Set_HScroll();
	SYS_HORZLEN = NEW_HORZLEN;
}
